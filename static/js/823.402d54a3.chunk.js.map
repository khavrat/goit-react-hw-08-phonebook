{"version":3,"file":"static/js/823.402d54a3.chunk.js","mappings":"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","sources":["components/registrationForm/RegistrationForm.jsx","pages/RegisterPage/RegisterPage.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-3GP7MWMA.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-RN6VKE3K.mjs"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport authOperation from 'redux/auth/authOperations';\nimport { selectIsLoggedIn } from '../../redux/auth/authSlice';\nimport { toast } from 'react-toastify';\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n  Input,\n  Button,\n} from '@chakra-ui/react';\n\nfunction RegistrationForm() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isNameError, setIsNameError] = useState(false);\n  const [isEmailError, setIsEmailError] = useState(false);\n  const [isPasswordError, setIsPasswordError] = useState(false);\n\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      return navigate('/contacts');\n    }\n  }, [isLoggedIn, navigate]);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        setIsNameError(false);\n        break;\n      case 'email':\n        setEmail(value);\n        setIsEmailError(false);\n        break;\n      case 'password':\n        setPassword(value);\n        setIsPasswordError(false);\n        break;\n      default:\n        console.log('input value: error');\n        return;\n    }\n  };\n\n  const reset = () => {\n    if (isNameError) {\n      setName('');\n    }\n    if (isEmailError) {\n      setEmail('');\n    }\n    if (isPasswordError) {\n      setPassword('');\n    }\n    if (!isNameError && !isEmailError && !isPasswordError) {\n      setName('');\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  const handleErrorByBlureName = e => {\n    const nameRegex = /^[a-zA-Z\\s-]{2,}$/;\n    setIsNameError(!nameRegex.test(name));\n  };\n\n  const handleErrorByBlureEmail = e => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{3,}$/;\n    setIsEmailError(!emailRegex.test(email));\n  };\n\n  const handleErrorByBlurePassword = e => {\n    const passwordRegex = /^(?=.*\\d).{6,}$/;\n    setIsPasswordError(!passwordRegex.test(password));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    handleErrorByBlureName();\n    handleErrorByBlureEmail();\n    handleErrorByBlurePassword();\n    reset();\n    console.log('isNameError :>> ', isNameError);\n    console.log('isEmailError :>> ', isEmailError);\n    console.log('isPasswordError :>> ', isPasswordError);\n    if (!isNameError && !isEmailError && !isPasswordError) {\n      try {\n        const statusData = await dispatch(\n          authOperation.register({ name, email, password })\n        );\n        if (statusData.error !== null) {\n          toast.error(statusData.payload);\n          reset();\n        } else {\n          reset();\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n  };\n\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <FormControl\n          isRequired\n          isInvalid={isNameError || isEmailError || isPasswordError}\n        >\n          <FormLabel htmlFor=\"name\">Name</FormLabel>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            id=\"name-regist\"\n            autoComplete=\"off\"\n            onChange={handleChange}\n            required\n            isInvalid={isNameError}\n            onBlur={handleErrorByBlureName}\n          />\n          {!isNameError ? (\n            <FormHelperText>\n              The name can contain only letters, spaces and dashes and should be\n              at least 2 characters\n            </FormHelperText>\n          ) : (\n            <FormErrorMessage>Name is required</FormErrorMessage>\n          )}\n\n          <FormLabel htmlFor=\"email\">Email</FormLabel>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            id=\"email-regist\"\n            autoComplete=\"off\"\n            onChange={handleChange}\n            required\n            isInvalid={isEmailError}\n            onBlur={handleErrorByBlureEmail}\n          />\n          {!isEmailError ? (\n            <FormHelperText>Enter the email</FormHelperText>\n          ) : (\n            <FormErrorMessage>Email is required</FormErrorMessage>\n          )}\n          <FormLabel htmlFor=\"password\">Password</FormLabel>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            id=\"password-regist\"\n            autoComplete=\"off\"\n            onChange={handleChange}\n            required\n            isInvalid={isPasswordError}\n            onBlur={handleErrorByBlurePassword}\n          />\n          {!isPasswordError ? (\n            <FormHelperText>\n              Password must have at least 6 characters and at least one digit\n            </FormHelperText>\n          ) : (\n            <FormErrorMessage>Password is required</FormErrorMessage>\n          )}\n\n          <Button type=\"submit\">Register</Button>\n        </FormControl>\n      </form>\n    </section>\n  );\n}\n\nexport default RegistrationForm;\n","import RegistrationForm from '../../components/registrationForm/RegistrationForm';\n\nconst RegisterPage = () => {\n  return <RegistrationForm />;\n};\n\nexport default RegisterPage;\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/form-error.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormErrorStylesProvider, useFormErrorStyles] = createContext({\n  name: `FormErrorStylesContext`,\n  errorMessage: `useFormErrorStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormError />\" `\n});\nvar FormErrorMessage = forwardRef(\n  (props, ref) => {\n    const styles = useMultiStyleConfig(\"FormError\", props);\n    const ownProps = omitThemingProps(props);\n    const field = useFormControlContext();\n    if (!(field == null ? void 0 : field.isInvalid))\n      return null;\n    return /* @__PURE__ */ jsx(FormErrorStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getErrorMessageProps(ownProps, ref),\n        className: cx(\"chakra-form__error-message\", props.className),\n        __css: {\n          display: \"flex\",\n          alignItems: \"center\",\n          ...styles.text\n        }\n      }\n    ) });\n  }\n);\nFormErrorMessage.displayName = \"FormErrorMessage\";\nvar FormErrorIcon = forwardRef((props, ref) => {\n  const styles = useFormErrorStyles();\n  const field = useFormControlContext();\n  if (!(field == null ? void 0 : field.isInvalid))\n    return null;\n  const _className = cx(\"chakra-form__error-icon\", props.className);\n  return /* @__PURE__ */ jsx(\n    Icon,\n    {\n      ref,\n      \"aria-hidden\": true,\n      ...props,\n      __css: styles.icon,\n      className: _className,\n      children: /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n        }\n      )\n    }\n  );\n});\nFormErrorIcon.displayName = \"FormErrorIcon\";\n\nexport {\n  useFormErrorStyles,\n  FormErrorMessage,\n  FormErrorIcon\n};\n","import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","isNameError","setIsNameError","isEmailError","setIsEmailError","isPasswordError","setIsPasswordError","dispatch","useDispatch","isLoggedIn","useSelector","selectIsLoggedIn","navigate","useNavigate","useEffect","handleChange","e","currentTarget","value","console","log","reset","handleErrorByBlureName","test","handleErrorByBlureEmail","handleErrorByBlurePassword","handleSubmit","preventDefault","authOperation","statusData","error","toast","payload","message","onSubmit","isRequired","isInvalid","htmlFor","I","type","id","autoComplete","onChange","required","onBlur","createContext","errorMessage","FormErrorStylesProvider","useFormErrorStyles","FormErrorMessage","forwardRef","props","ref","styles","useMultiStyleConfig","ownProps","omitThemingProps","field","useFormControlContext","jsx","children","chakra","getErrorMessageProps","className","cx","__css","display","alignItems","text","displayName","_className","Icon","icon","fill","d","FormLabel","passedProps","_a","useStyleConfig","requiredIndicator","RequiredIndicator","optionalIndicator","rest","getLabelProps","jsxs","textAlign","useFormControlStyles","getRequiredIndicatorProps"],"sourceRoot":""}
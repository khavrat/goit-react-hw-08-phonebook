{"version":3,"file":"static/js/732.10493b0f.chunk.js","mappings":"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","sources":["components/loginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-3GP7MWMA.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-RN6VKE3K.mjs","../node_modules/@chakra-ui/input/dist/chunk-6XCF7NSR.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs","../node_modules/@chakra-ui/input/dist/chunk-J356FWKS.mjs"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport authOperation from '../../redux/auth/authOperations';\nimport { useNavigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from 'redux/auth/authSlice';\nimport Loader from 'components/loader/Loader';\nimport { toast } from 'react-toastify';\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n  Input,\n  Button,\n  InputGroup,\n  InputRightElement,\n} from '@chakra-ui/react';\n\nfunction LoginForm() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isEmailError, setIsEmailError] = useState(false);\n  const [isPasswordError, setIsPasswordError] = useState(false);\n    const [show, setShow] = useState(false);\n\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      return navigate('/contacts');\n    }\n  }, [isLoggedIn, navigate]);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        setIsEmailError(false);\n        break;\n      case 'password':\n        setPassword(value);\n        setIsPasswordError(false);\n        break;\n      default:\n        console.log('input value: error');\n        return;\n    }\n  };\n\n  const reset = () => {\n    if (isEmailError) {\n      setEmail('');\n    }\n    if (isPasswordError) {\n      setPassword('');\n    }\n    if (!isEmailError && !isPasswordError) {\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  const handleErrorByBlureEmail = e => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{3,}$/;\n    setIsEmailError(!emailRegex.test(email));\n  };\n\n  const handleErrorByBlurePassword = e => {\n    const passwordRegex = /^(?=.*\\d).{6,}$/;\n    setIsPasswordError(!passwordRegex.test(password));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    handleErrorByBlureEmail();\n    handleErrorByBlurePassword();\n    reset();\n\n    if (!isEmailError && !isPasswordError) {\n      try {\n        const statusData = await dispatch(\n          authOperation.logIn({ email, password })\n        );\n        if (statusData !== null) {\n          toast.error(statusData.payload);\n          reset();\n        } else {\n          reset();\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handleClick = () => setShow(!show);\n\n  return (\n    <Loader>\n      <form onSubmit={handleSubmit}>\n        <FormControl isRequired isInvalid={isEmailError || isPasswordError}>\n          <FormLabel htmlFor=\"email\">Email</FormLabel>\n          <Input\n            type=\"email\"\n            placeholder=\"Enter email\"\n            name=\"email\"\n            value={email}\n            id=\"email-login\"\n            autoComplete=\"off\"\n            onChange={handleChange}\n            required\n            isInvalid={isEmailError}\n            onBlur={handleErrorByBlureEmail}\n          />\n          {!isEmailError ? (\n            <FormHelperText>Enter the email</FormHelperText>\n          ) : (\n            <FormErrorMessage>Email is required</FormErrorMessage>\n          )}\n          <FormLabel htmlFor=\"password\">Password</FormLabel>\n          <InputGroup>\n            <Input\n              pr=\"4.5rem\"\n              type={show ? 'text' : 'password'}\n              placeholder=\"Enter password\"\n              // type=\"password\"\n              name=\"password\"\n              value={password}\n              id=\"password-login\"\n              autoComplete=\"off\"\n              onChange={handleChange}\n              required\n              isInvalid={isPasswordError}\n              onBlur={handleErrorByBlurePassword}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n                {show ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>{' '}\n          </InputGroup>\n          {!isPasswordError ? (\n            <FormHelperText>\n              Password must have at least 6 characters and at least one digit\n            </FormHelperText>\n          ) : (\n            <FormErrorMessage>Password is required.</FormErrorMessage>\n          )}\n          <Button type=\"submit\">Log in</Button>\n        </FormControl>\n      </form>\n    </Loader>\n  );\n}\n\nexport default LoginForm;\n","import LoginForm from '../../components/loginForm/LoginForm';\n\nconst LoginPage = () => {\n  return <LoginForm />;\n};\n\nexport default LoginPage;\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/form-error.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormErrorStylesProvider, useFormErrorStyles] = createContext({\n  name: `FormErrorStylesContext`,\n  errorMessage: `useFormErrorStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormError />\" `\n});\nvar FormErrorMessage = forwardRef(\n  (props, ref) => {\n    const styles = useMultiStyleConfig(\"FormError\", props);\n    const ownProps = omitThemingProps(props);\n    const field = useFormControlContext();\n    if (!(field == null ? void 0 : field.isInvalid))\n      return null;\n    return /* @__PURE__ */ jsx(FormErrorStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getErrorMessageProps(ownProps, ref),\n        className: cx(\"chakra-form__error-message\", props.className),\n        __css: {\n          display: \"flex\",\n          alignItems: \"center\",\n          ...styles.text\n        }\n      }\n    ) });\n  }\n);\nFormErrorMessage.displayName = \"FormErrorMessage\";\nvar FormErrorIcon = forwardRef((props, ref) => {\n  const styles = useFormErrorStyles();\n  const field = useFormControlContext();\n  if (!(field == null ? void 0 : field.isInvalid))\n    return null;\n  const _className = cx(\"chakra-form__error-icon\", props.className);\n  return /* @__PURE__ */ jsx(\n    Icon,\n    {\n      ref,\n      \"aria-hidden\": true,\n      ...props,\n      __css: styles.icon,\n      className: _className,\n      children: /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n        }\n      )\n    }\n  );\n});\nFormErrorIcon.displayName = \"FormErrorIcon\";\n\nexport {\n  useFormErrorStyles,\n  FormErrorMessage,\n  FormErrorIcon\n};\n","import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n","// src/input-group.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { cloneElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [InputGroupStylesProvider, useInputGroupStyles] = createContext({\n  name: `InputGroupStylesContext`,\n  errorMessage: `useInputGroupStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<InputGroup />\" `\n});\nvar InputGroup = forwardRef(\n  function InputGroup2(props, ref) {\n    const styles = useMultiStyleConfig(\"Input\", props);\n    const { children, className, ...rest } = omitThemingProps(props);\n    const _className = cx(\"chakra-input__group\", className);\n    const groupStyles = {};\n    const validChildren = getValidChildren(children);\n    const input = styles.field;\n    validChildren.forEach((child) => {\n      var _a, _b;\n      if (!styles)\n        return;\n      if (input && child.type.id === \"InputLeftElement\") {\n        groupStyles.paddingStart = (_a = input.height) != null ? _a : input.h;\n      }\n      if (input && child.type.id === \"InputRightElement\") {\n        groupStyles.paddingEnd = (_b = input.height) != null ? _b : input.h;\n      }\n      if (child.type.id === \"InputRightAddon\") {\n        groupStyles.borderEndRadius = 0;\n      }\n      if (child.type.id === \"InputLeftAddon\") {\n        groupStyles.borderStartRadius = 0;\n      }\n    });\n    const clones = validChildren.map((child) => {\n      var _a, _b;\n      const theming = compact({\n        size: ((_a = child.props) == null ? void 0 : _a.size) || props.size,\n        variant: ((_b = child.props) == null ? void 0 : _b.variant) || props.variant\n      });\n      return child.type.id !== \"Input\" ? cloneElement(child, theming) : cloneElement(child, Object.assign(theming, groupStyles, child.props));\n    });\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        className: _className,\n        ref,\n        __css: {\n          width: \"100%\",\n          display: \"flex\",\n          position: \"relative\",\n          isolation: \"isolate\"\n        },\n        \"data-group\": true,\n        ...rest,\n        children: /* @__PURE__ */ jsx(InputGroupStylesProvider, { value: styles, children: clones })\n      }\n    );\n  }\n);\nInputGroup.displayName = \"InputGroup\";\n\nexport {\n  useInputGroupStyles,\n  InputGroup\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n","import {\n  useInputGroupStyles\n} from \"./chunk-6XCF7NSR.mjs\";\n\n// src/input-element.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledInputElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2\n  }\n});\nvar InputElement = forwardRef(function InputElement2(props, ref) {\n  var _a, _b;\n  const { placement = \"left\", ...rest } = props;\n  const styles = useInputGroupStyles();\n  const input = styles.field;\n  const attr = placement === \"left\" ? \"insetStart\" : \"insetEnd\";\n  const elementStyles = {\n    [attr]: \"0\",\n    width: (_a = input == null ? void 0 : input.height) != null ? _a : input == null ? void 0 : input.h,\n    height: (_b = input == null ? void 0 : input.height) != null ? _b : input == null ? void 0 : input.h,\n    fontSize: input == null ? void 0 : input.fontSize,\n    ...styles.element\n  };\n  return /* @__PURE__ */ jsx(StyledInputElement, { ref, __css: elementStyles, ...rest });\n});\nInputElement.id = \"InputElement\";\nInputElement.displayName = \"InputElement\";\nvar InputLeftElement = forwardRef(\n  function InputLeftElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__left-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"left\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputLeftElement.id = \"InputLeftElement\";\nInputLeftElement.displayName = \"InputLeftElement\";\nvar InputRightElement = forwardRef(\n  function InputRightElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__right-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"right\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputRightElement.id = \"InputRightElement\";\nInputRightElement.displayName = \"InputRightElement\";\n\nexport {\n  InputLeftElement,\n  InputRightElement\n};\n"],"names":["useState","email","setEmail","password","setPassword","isEmailError","setIsEmailError","isPasswordError","setIsPasswordError","show","setShow","dispatch","useDispatch","isLoggedIn","useSelector","selectIsLoggedIn","navigate","useNavigate","useEffect","handleChange","e","currentTarget","name","value","console","log","reset","handleErrorByBlureEmail","test","handleErrorByBlurePassword","handleSubmit","preventDefault","authOperation","statusData","toast","payload","Loader","onSubmit","isRequired","isInvalid","htmlFor","I","type","placeholder","id","autoComplete","onChange","required","onBlur","pr","width","h","size","onClick","createContext","errorMessage","FormErrorStylesProvider","useFormErrorStyles","FormErrorMessage","forwardRef","props","ref","styles","useMultiStyleConfig","ownProps","omitThemingProps","field","useFormControlContext","jsx","children","chakra","getErrorMessageProps","className","cx","__css","display","alignItems","text","displayName","_className","Icon","icon","fill","d","FormLabel","passedProps","_a","useStyleConfig","requiredIndicator","RequiredIndicator","optionalIndicator","rest","getLabelProps","jsxs","textAlign","useFormControlStyles","getRequiredIndicatorProps","InputGroupStylesProvider","useInputGroupStyles","InputGroup","groupStyles","validChildren","Children","filter","child","isValidElement","getValidChildren","input","forEach","_b","paddingStart","height","paddingEnd","borderEndRadius","borderStartRadius","clones","map","theming","compact","variant","cloneElement","Object","assign","position","isolation","StyledInputElement","baseStyle","justifyContent","top","zIndex","InputElement","placement","attr","elementStyles","fontSize","element","InputLeftElement","InputRightElement"],"sourceRoot":""}
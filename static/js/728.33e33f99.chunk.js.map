{"version":3,"file":"static/js/728.33e33f99.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/icon/dist/chunk-QODHG6BI.mjs","../node_modules/@chakra-ui/icons/dist/chunk-TEXEZHMQ.mjs","../node_modules/@chakra-ui/icons/dist/chunk-NIMLFBFN.mjs","components/contactForm/ContactForm.jsx","components/contactFilter/ContactFilter.jsx","components/contactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx","../node_modules/@chakra-ui/input/dist/chunk-6XCF7NSR.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs","../node_modules/@chakra-ui/input/dist/chunk-J356FWKS.mjs"],"sourcesContent":["import {\n  Icon\n} from \"./chunk-DKFDJSXF.mjs\";\n\n// src/create-icon.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { Children } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createIcon(options) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    displayName,\n    defaultProps = {}\n  } = options;\n  const path = Children.toArray(options.path);\n  const Comp = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, viewBox, ...defaultProps, ...props, children: path.length ? path : /* @__PURE__ */ jsx(\"path\", { fill: \"currentColor\", d: pathDefinition }) }));\n  Comp.displayName = displayName;\n  return Comp;\n}\n\nexport {\n  createIcon\n};\n","// src/Edit.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar EditIcon = createIcon({\n  displayName: \"EditIcon\",\n  path: /* @__PURE__ */ jsxs(\"g\", { fill: \"none\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeWidth: \"2\", children: [\n    /* @__PURE__ */ jsx(\"path\", { d: \"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" }),\n    /* @__PURE__ */ jsx(\"path\", { d: \"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" })\n  ] })\n});\n\nexport {\n  EditIcon\n};\n","// src/Phone.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar PhoneIcon = createIcon({\n  d: \"M2.20731,0.0127209 C2.1105,-0.0066419 1.99432,-0.00664663 1.91687,0.032079 C0.871279,0.438698 0.212942,1.92964 0.0580392,2.95587 C-0.426031,6.28627 2.20731,9.17133 4.62766,11.0689 C6.77694,12.7534 10.9012,15.5223 13.3409,12.8503 C13.6507,12.5211 14.0186,12.037 13.9993,11.553 C13.9412,10.7397 13.186,10.1588 12.6051,9.71349 C12.1598,9.38432 11.2304,8.47427 10.6495,8.49363 C10.1267,8.51299 9.79754,9.05515 9.46837,9.38432 L8.88748,9.96521 C8.79067,10.062 7.55145,9.24878 7.41591,9.15197 C6.91248,8.8228 6.4284,8.45491 6.00242,8.04829 C5.57644,7.64167 5.18919,7.19632 4.86002,6.73161 C4.7632,6.59607 3.96933,5.41495 4.04678,5.31813 C4.04678,5.31813 4.72448,4.58234 4.91811,4.2919 C5.32473,3.67229 5.63453,3.18822 5.16982,2.45243 C4.99556,2.18135 4.78257,1.96836 4.55021,1.73601 C4.14359,1.34875 3.73698,0.942131 3.27227,0.612963 C3.02055,0.419335 2.59457,0.0708094 2.20731,0.0127209 Z\",\n  displayName: \"PhoneIcon\",\n  viewBox: \"0 0 14 14\"\n});\n\nexport {\n  PhoneIcon\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContactAsync } from '../../redux/contacts/contactsOperations';\nimport { toast } from 'react-toastify';\nimport {\n  FormControl,\n  Input,\n  Button,\n  InputGroup,\n  InputLeftElement, \n} from '@chakra-ui/react';\nimport { PhoneIcon, EditIcon } from '@chakra-ui/icons'\n\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log('input value: error');\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const statusData = await dispatch(addContactAsync({ name, number }));\n      if (statusData.error) {\n        toast.error(statusData.payload);\n      } else {\n        reset();\n        toast.success(`${statusData.payload.name} has been added successfully`);\n      }\n    } catch (error) {\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl>\n        {/* <FormLabel htmlFor=\"name\">name</FormLabel> */}\n        <InputGroup>\n          <InputLeftElement\n            pointerEvents=\"none\"\n            children={<EditIcon color=\"gray.400\" />}\n          />\n          <Input\n            className=\"input\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={handleChange}\n            required\n            placeholder=\"Name contact\"\n            size=\"md\"\n          />\n        </InputGroup>\n        {/* <label htmlFor=\"number\">number</label> */}\n        <InputGroup>\n          <InputLeftElement\n            pointerEvents=\"none\"\n            children={<PhoneIcon color=\"gray.300\" />}\n          />{' '}\n          <Input\n            className=\"input\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={handleChange}\n            required\n            placeholder=\"Phone number\"\n            size=\"md\"\n          />\n        </InputGroup>\n        <Button type=\"submit\">add contact</Button>\n      </FormControl>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter, selectFilter } from 'redux/contacts/contactsSlice';\n\nfunction ContactFilter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={changeFilter}\n      />\n    </div>\n  );\n}\n\nexport default ContactFilter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectFilter,\n} from '../../redux/contacts/contactsSlice';\nimport { removeContactAsync } from 'redux/contacts/contactsOperations';\nimport { toast } from 'react-toastify';\nimport { CloseButton } from '@chakra-ui/react';\n\nfunction ContactList() {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  console.log('filter ContactList:>> ', filter);\n\n  const onDeleteContact = async contactId => {\n    console.log('putdown to delete');\n    const deletedContact = contacts.find(contact => contact.id === contactId);\n    try {\n      await dispatch(removeContactAsync(contactId));\n      toast.info(`🚀 ${deletedContact.name} has been deleted successfully`, {\n        delay: 250,\n      });\n    } catch (error) {\n      toast.error(`Could not remove contact${deletedContact.name}`);\n    }\n  };\n\n  const visibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    console.log('contacts in visibleContacts ContactList :>> ', contacts);\n\n    return contacts.filter(\n      contact =>\n        contact &&\n        contact.name &&\n        contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  // const contactsList = visibleContacts();\n  const contactsList = Array.isArray(contacts) ? visibleContacts() : [];\n  return (\n    <ul>\n      {contactsList.map(visibleContact => (\n        <li key={visibleContact.id}>\n          {visibleContact.name}:\n          {visibleContact.number}\n          <CloseButton\n            size=\"md\"\n            type=\"button\"\n            onClick={() => onDeleteContact(visibleContact.id)}\n          >\n          </CloseButton>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import ContactForm from 'components/contactForm/ContactForm';\nimport ContactFilter from 'components/contactFilter/ContactFilter';\nimport ContactList from 'components/contactList/ContactList';\nimport { useEffect } from 'react';\nimport { fetchContactsAsync } from '../../redux/contacts/contactsOperations';\nimport { useDispatch } from 'react-redux';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactsAsync(dispatch));\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <ContactFilter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n","// src/input-group.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { cloneElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [InputGroupStylesProvider, useInputGroupStyles] = createContext({\n  name: `InputGroupStylesContext`,\n  errorMessage: `useInputGroupStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<InputGroup />\" `\n});\nvar InputGroup = forwardRef(\n  function InputGroup2(props, ref) {\n    const styles = useMultiStyleConfig(\"Input\", props);\n    const { children, className, ...rest } = omitThemingProps(props);\n    const _className = cx(\"chakra-input__group\", className);\n    const groupStyles = {};\n    const validChildren = getValidChildren(children);\n    const input = styles.field;\n    validChildren.forEach((child) => {\n      var _a, _b;\n      if (!styles)\n        return;\n      if (input && child.type.id === \"InputLeftElement\") {\n        groupStyles.paddingStart = (_a = input.height) != null ? _a : input.h;\n      }\n      if (input && child.type.id === \"InputRightElement\") {\n        groupStyles.paddingEnd = (_b = input.height) != null ? _b : input.h;\n      }\n      if (child.type.id === \"InputRightAddon\") {\n        groupStyles.borderEndRadius = 0;\n      }\n      if (child.type.id === \"InputLeftAddon\") {\n        groupStyles.borderStartRadius = 0;\n      }\n    });\n    const clones = validChildren.map((child) => {\n      var _a, _b;\n      const theming = compact({\n        size: ((_a = child.props) == null ? void 0 : _a.size) || props.size,\n        variant: ((_b = child.props) == null ? void 0 : _b.variant) || props.variant\n      });\n      return child.type.id !== \"Input\" ? cloneElement(child, theming) : cloneElement(child, Object.assign(theming, groupStyles, child.props));\n    });\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        className: _className,\n        ref,\n        __css: {\n          width: \"100%\",\n          display: \"flex\",\n          position: \"relative\",\n          isolation: \"isolate\"\n        },\n        \"data-group\": true,\n        ...rest,\n        children: /* @__PURE__ */ jsx(InputGroupStylesProvider, { value: styles, children: clones })\n      }\n    );\n  }\n);\nInputGroup.displayName = \"InputGroup\";\n\nexport {\n  useInputGroupStyles,\n  InputGroup\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n","import {\n  useInputGroupStyles\n} from \"./chunk-6XCF7NSR.mjs\";\n\n// src/input-element.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledInputElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2\n  }\n});\nvar InputElement = forwardRef(function InputElement2(props, ref) {\n  var _a, _b;\n  const { placement = \"left\", ...rest } = props;\n  const styles = useInputGroupStyles();\n  const input = styles.field;\n  const attr = placement === \"left\" ? \"insetStart\" : \"insetEnd\";\n  const elementStyles = {\n    [attr]: \"0\",\n    width: (_a = input == null ? void 0 : input.height) != null ? _a : input == null ? void 0 : input.h,\n    height: (_b = input == null ? void 0 : input.height) != null ? _b : input == null ? void 0 : input.h,\n    fontSize: input == null ? void 0 : input.fontSize,\n    ...styles.element\n  };\n  return /* @__PURE__ */ jsx(StyledInputElement, { ref, __css: elementStyles, ...rest });\n});\nInputElement.id = \"InputElement\";\nInputElement.displayName = \"InputElement\";\nvar InputLeftElement = forwardRef(\n  function InputLeftElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__left-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"left\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputLeftElement.id = \"InputLeftElement\";\nInputLeftElement.displayName = \"InputLeftElement\";\nvar InputRightElement = forwardRef(\n  function InputRightElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__right-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"right\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputRightElement.id = \"InputRightElement\";\nInputRightElement.displayName = \"InputRightElement\";\n\nexport {\n  InputLeftElement,\n  InputRightElement\n};\n"],"names":["createIcon","options","viewBox","pathDefinition","d","displayName","defaultProps","path","Children","Comp","forwardRef","props","ref","jsx","Icon","children","length","fill","EditIcon","jsxs","stroke","strokeLinecap","strokeWidth","PhoneIcon","useState","name","setName","number","setNumber","dispatch","useDispatch","handleChange","e","currentTarget","value","console","log","handleSubmit","preventDefault","addContactAsync","statusData","error","toast","payload","onSubmit","pointerEvents","color","I","className","type","pattern","title","onChange","required","placeholder","size","filter","useSelector","selectFilter","htmlFor","setFilter","contacts","selectContacts","onDeleteContact","contactId","deletedContact","find","contact","id","removeContactAsync","delay","contactsList","Array","isArray","normalizedFilter","toLowerCase","includes","visibleContacts","map","visibleContact","onClick","useEffect","fetchContactsAsync","createContext","errorMessage","InputGroupStylesProvider","useInputGroupStyles","InputGroup","styles","useMultiStyleConfig","omitThemingProps","rest","_className","cx","groupStyles","validChildren","child","isValidElement","getValidChildren","input","field","forEach","_a","_b","paddingStart","height","h","paddingEnd","borderEndRadius","borderStartRadius","clones","theming","compact","variant","cloneElement","Object","assign","chakra","__css","width","display","position","isolation","StyledInputElement","baseStyle","alignItems","justifyContent","top","zIndex","InputElement","placement","attr","elementStyles","fontSize","element","InputLeftElement","InputRightElement"],"sourceRoot":""}
{"version":3,"file":"static/js/298.94a0f2bc.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/icons/dist/chunk-NIMLFBFN.mjs","components/contactForm/ContactForm.jsx","../node_modules/@chakra-ui/icons/dist/chunk-XOVTCM5B.mjs","components/contactFilter/ContactFilter.jsx","../node_modules/@chakra-ui/table/dist/chunk-B3MS3L3D.mjs","../node_modules/@chakra-ui/table/dist/chunk-D3HTYHQX.mjs","../node_modules/@chakra-ui/table/dist/chunk-L7UVV2ML.mjs","../node_modules/@chakra-ui/table/dist/chunk-BLRPLYZO.mjs","../node_modules/@chakra-ui/icons/dist/chunk-HFJCK6H7.mjs","components/contactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// src/Phone.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar PhoneIcon = createIcon({\n  d: \"M2.20731,0.0127209 C2.1105,-0.0066419 1.99432,-0.00664663 1.91687,0.032079 C0.871279,0.438698 0.212942,1.92964 0.0580392,2.95587 C-0.426031,6.28627 2.20731,9.17133 4.62766,11.0689 C6.77694,12.7534 10.9012,15.5223 13.3409,12.8503 C13.6507,12.5211 14.0186,12.037 13.9993,11.553 C13.9412,10.7397 13.186,10.1588 12.6051,9.71349 C12.1598,9.38432 11.2304,8.47427 10.6495,8.49363 C10.1267,8.51299 9.79754,9.05515 9.46837,9.38432 L8.88748,9.96521 C8.79067,10.062 7.55145,9.24878 7.41591,9.15197 C6.91248,8.8228 6.4284,8.45491 6.00242,8.04829 C5.57644,7.64167 5.18919,7.19632 4.86002,6.73161 C4.7632,6.59607 3.96933,5.41495 4.04678,5.31813 C4.04678,5.31813 4.72448,4.58234 4.91811,4.2919 C5.32473,3.67229 5.63453,3.18822 5.16982,2.45243 C4.99556,2.18135 4.78257,1.96836 4.55021,1.73601 C4.14359,1.34875 3.73698,0.942131 3.27227,0.612963 C3.02055,0.419335 2.59457,0.0708094 2.20731,0.0127209 Z\",\n  displayName: \"PhoneIcon\",\n  viewBox: \"0 0 14 14\"\n});\n\nexport {\n  PhoneIcon\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContactAsync } from '../../redux/contacts/contactsOperations';\nimport { toast } from 'react-toastify';\nimport {\n  FormControl,\n  Input,\n  Button,\n  InputGroup,\n  InputLeftElement,\n  Box,\n  FormLabel,\n  useColorMode,\n} from '@chakra-ui/react';\nimport { PhoneIcon, EditIcon } from '@chakra-ui/icons';\nimport { getInputColor } from '../colorModeSwitcher/ColorModeSwitch';\nimport {\n  getContactFieldColor,\n  getElementsColor,\n} from '../colorModeSwitcher/ColorModeSwitch';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const { colorMode } = useColorMode();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log('input value: error');\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const statusData = await dispatch(addContactAsync({ name, number }));\n      if (statusData.error) {\n        toast.error(statusData.payload);\n      } else {\n        reset();\n        toast.success(`${statusData.payload.name} has been added successfully`);\n      }\n    } catch (error) {}\n  };\n\n  return (\n    <Box p=\"20px\" bg={getContactFieldColor(colorMode)} borderRadius=\"10px\">\n      <form onSubmit={handleSubmit}>\n        <FormControl>\n          <FormLabel\n            mt=\"50px\"\n            htmlFor=\"name\"\n            color={getElementsColor(colorMode)}\n          >\n            name\n          </FormLabel>\n          <InputGroup>\n            <InputLeftElement\n              pointerEvents=\"none\"\n              children={<EditIcon color=\"gray.400\" />}\n            />\n            <Input\n              bg={getInputColor(colorMode)}\n              // className=\"input\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              onChange={handleChange}\n              required\n              placeholder=\"Name contact\"\n              size=\"md\"\n            />\n          </InputGroup>\n          <FormLabel\n            mt=\"50px\"\n            htmlFor=\"number\"\n            color={getElementsColor(colorMode)}\n          >\n            number\n          </FormLabel>\n          <InputGroup>\n            <InputLeftElement\n              pointerEvents=\"none\"\n              children={<PhoneIcon color=\"gray.300\" />}\n            />{' '}\n            <Input\n              bg={getInputColor(colorMode)}\n              // className=\"input\"\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              onChange={handleChange}\n              required\n              placeholder=\"Phone number\"\n              size=\"md\"\n            />\n          </InputGroup>\n          <Button type=\"submit\" mt=\"30px\" colorScheme=\"blue\" size=\"sm\">\n            add contact\n          </Button>\n        </FormControl>\n      </form>\n    </Box>\n  );\n}\n\nexport default ContactForm;\n","// src/Search.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar SearchIcon = createIcon({\n  d: \"M23.384,21.619,16.855,15.09a9.284,9.284,0,1,0-1.768,1.768l6.529,6.529a1.266,1.266,0,0,0,1.768,0A1.251,1.251,0,0,0,23.384,21.619ZM2.75,9.5a6.75,6.75,0,1,1,6.75,6.75A6.758,6.758,0,0,1,2.75,9.5Z\",\n  displayName: \"SearchIcon\"\n});\n\nexport {\n  SearchIcon\n};\n","import { SearchIcon } from '@chakra-ui/icons';\nimport {\n  Box,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  useColorMode,\n} from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter, selectFilter } from 'redux/contacts/contactsSlice';\nimport {\n  getInputColor,\n  getElementsColor,\n} from '../colorModeSwitcher/ColorModeSwitch';\n\nfunction ContactFilter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const { colorMode } = useColorMode();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <Box as=\"section\" mt=\"50px\">\n      <form>\n        <FormLabel\n          fontSize={{ base: '1em', md: '1.2em' }}\n          color={getElementsColor(colorMode)}\n          htmlFor=\"filter\"\n        >\n          Search contacts\n        </FormLabel>\n        <InputGroup>\n          <InputLeftElement\n            pointerEvents=\"none\"\n            children={<SearchIcon color=\"gray.400\" />}\n          />{' '}\n          <Input\n            bg={getInputColor(colorMode)}\n            placeholder=\"Search contacts\"\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={changeFilter}\n          />\n        </InputGroup>\n      </form>\n    </Box>\n  );\n}\n\nexport default ContactFilter;\n","// src/table.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TableStylesProvider, useTableStyles] = createContext({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `\n});\nvar Table = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props);\n  const { className, layout, ...tableProps } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(TableStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.table,\n    {\n      ref,\n      __css: { tableLayout: layout, ...styles.table },\n      className: cx(\"chakra-table\", className),\n      ...tableProps\n    }\n  ) });\n});\nTable.displayName = \"Table\";\n\nexport {\n  useTableStyles,\n  Table\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tbody.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tbody = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tbody, { ...props, ref, __css: styles.tbody });\n});\n\nexport {\n  Tbody\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tr.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tr = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tr, { ...props, ref, __css: styles.tr });\n});\n\nexport {\n  Tr\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/td.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Td = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.td,\n      {\n        ...rest,\n        ref,\n        __css: styles.td,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Td\n};\n","// src/Delete.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nimport { jsx } from \"react/jsx-runtime\";\nvar DeleteIcon = createIcon({\n  displayName: \"DeleteIcon\",\n  path: /* @__PURE__ */ jsx(\"g\", { fill: \"currentColor\", children: /* @__PURE__ */ jsx(\"path\", { d: \"M19.452 7.5H4.547a.5.5 0 00-.5.545l1.287 14.136A2 2 0 007.326 24h9.347a2 2 0 001.992-1.819L19.95 8.045a.5.5 0 00-.129-.382.5.5 0 00-.369-.163zm-9.2 13a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zm5 0a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zM22 4h-4.75a.25.25 0 01-.25-.25V2.5A2.5 2.5 0 0014.5 0h-5A2.5 2.5 0 007 2.5v1.25a.25.25 0 01-.25.25H2a1 1 0 000 2h20a1 1 0 000-2zM9 3.75V2.5a.5.5 0 01.5-.5h5a.5.5 0 01.5.5v1.25a.25.25 0 01-.25.25h-5.5A.25.25 0 019 3.75z\" }) })\n});\n\nexport {\n  DeleteIcon\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectFilter,\n} from '../../redux/contacts/contactsSlice';\nimport { removeContactAsync } from 'redux/contacts/contactsOperations';\nimport { toast } from 'react-toastify';\nimport {\n  IconButton,\n  Table,\n  Tbody,\n  Td,\n  Tr,\n  useColorMode,\n} from '@chakra-ui/react';\nimport { DeleteIcon, PhoneIcon } from '@chakra-ui/icons';\nimport { getElementsColor } from '../colorModeSwitcher/ColorModeSwitch';\n\nfunction ContactList() {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const { colorMode } = useColorMode();\n\n  const onDeleteContact = async contactId => {\n    const deletedContact = contacts.find(contact => contact.id === contactId);\n    try {\n      await dispatch(removeContactAsync(contactId));\n      toast.info(`${deletedContact.name} has been deleted successfully`, {\n        delay: 250,\n      });\n    } catch (error) {\n      toast.error(`Could not remove contact${deletedContact.name}`);\n    }\n  };\n\n  const visibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(\n      contact =>\n        contact &&\n        contact.name &&\n        contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const contactsList = Array.isArray(contacts) ? visibleContacts() : [];\n\n  return (\n    <Table size=\"sm\">\n      <Tbody>\n        {contactsList.map(visibleContact => (\n          <Tr key={visibleContact.id}>\n            <Td padding=\"16px 24px 16px 4px\">{visibleContact.name}:</Td>\n            <Td padding=\"16px 24px 16px 4px\">{visibleContact.number}</Td>\n            <Td padding=\"8px 0\">\n              <IconButton\n                as=\"a\"\n                href={`tel:${visibleContact.number}`}\n                size=\"md\"\n                bg=\"transparent\"\n                aria-label=\"Phone\"\n                icon={<PhoneIcon color={getElementsColor(colorMode)} />}\n              />\n            </Td>\n            <Td padding=\"8px 0\">\n              <IconButton\n                size=\"md\"\n                bg=\"transparent\"\n                aria-label=\"Phone\"\n                onClick={() => onDeleteContact(visibleContact.id)}\n                icon={<DeleteIcon color={getElementsColor(colorMode)} />}\n              ></IconButton>\n            </Td>\n          </Tr>\n        ))}\n      </Tbody>\n    </Table>\n  );\n}\n\nexport default ContactList;\n","import ContactForm from 'components/contactForm/ContactForm';\nimport ContactFilter from 'components/contactFilter/ContactFilter';\nimport ContactList from 'components/contactList/ContactList';\nimport { useEffect } from 'react';\nimport { fetchContactsAsync } from '../../redux/contacts/contactsOperations';\nimport { useDispatch } from 'react-redux';\nimport { Container } from '@chakra-ui/react';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactsAsync(dispatch));\n  }, [dispatch]);\n\n  return (\n    <Container as='section' maxWidth='4xl' py='20px'>\n      <ContactForm />\n      <ContactFilter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["PhoneIcon","createIcon","d","displayName","viewBox","useState","name","setName","number","setNumber","dispatch","useDispatch","colorMode","useColorMode","handleChange","e","currentTarget","value","console","log","handleSubmit","preventDefault","addContactAsync","statusData","error","toast","payload","p","bg","getContactFieldColor","borderRadius","onSubmit","mt","htmlFor","color","getElementsColor","pointerEvents","children","I","getInputColor","type","pattern","title","onChange","required","placeholder","size","colorScheme","SearchIcon","filter","useSelector","selectFilter","as","fontSize","base","md","setFilter","createContext","errorMessage","TableStylesProvider","useTableStyles","Table","forwardRef","props","ref","styles","useMultiStyleConfig","omitThemingProps","className","layout","tableProps","jsx","chakra","__css","tableLayout","table","cx","Tbody","tbody","Tr","tr","Td","isNumeric","rest","td","DeleteIcon","path","fill","contacts","selectContacts","onDeleteContact","contactId","deletedContact","find","contact","id","removeContactAsync","delay","contactsList","Array","isArray","normalizedFilter","toLowerCase","includes","visibleContacts","map","visibleContact","padding","href","icon","onClick","useEffect","fetchContactsAsync","maxWidth","py"],"sourceRoot":""}